name: CI/CD

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Node Check
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: npm ci || (echo "fail - Install Dependencies" && exit 1)

      - name: Build
        run: npm run build || (echo "fail - Build" && exit 1)

      - name: Prepare Deployment Package
        run: |
          mkdir -p deploy
          cp -r dist  package.json package-lock.json tsconfig.json ecosystem.config.js  deploy/
          tar -czf deploy.tar.gz -C deploy . || (echo "fail - Prepare Deployment Package" && exit 1)

      - name: Deploy
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key deploy.tar.gz ${USER}@${HOST}:~/ || (echo "fail - Deploy (copy deployment package to server)" && exit 1)
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '
            mkdir -p ~/discord-youtube-bot
            tar -xzf deploy.tar.gz -C ~/discord-youtube-bot || (echo "fail - Deploy (extract deployment package on server)" && exit 1)
            cd ~/discord-youtube-bot 
            npm ci || (echo "fail - Deploy (install dependencies on server)" && exit 1) 
            pm2 reload ecosystem.config.js  || pm2 start ecosystem.config.js || (echo "fail - Deploy (start/reload application with PM2)" && exit 1)
            rm -f ~/deploy.tar.gz || (echo "fail - Deploy (remove deployment package)" && exit 1)' || (echo "fail - Deploy (execute commands on server)" && exit 1)
          rm -f private_key
